%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - ice
scope: source.ice

variables:
  punctuation: '[\[\\\]()\.,:;]'
  operator: '(?:[-+*/%&|~^<=>]|!=)'
  shape_symbols: '(?:[*^\d()]|\[\d+\])'
  keyword: |-
    \b(?x:if|else|elif|for|while
    |return|break|continue|pass)\b


contexts:
  prototype:
    - include: comments

  main:
    - include: keywords
    - include: function
    - include: numbers
    - include: strings
    - include: labels
    - match: ({{punctuation}})
      scope: punctuation.ice
    - match: ({{operator}})
      scope: keyword.operator.ice

  symbols:
    - match: ({{shape_symbols}})
      scope: punctuation.shape-symbol.ice

  labels:
    - match: ^\s*(@)(?={{shape_symbols}}*\w+[^:]*$)
      scope: punctuation.label.ice
      push:
        - include: symbols
        - match: \w+
          scope: entity.name.tag.ice
        - match: \b
          pop: true
    - match: ^\s*(@)(?={{shape_symbols}}*\w+.*:)
      scope: punctuation.definition.label.ice
      push:
        - include: symbols
        - match: \w+
          scope: entity.name.label.ice
        - match: \b
          pop: true

  function:
    - match: ^\s*(?={{shape_symbols}}*\w+\(.*\):)
      push:
        - include: symbols
        - match: \w+
          scope: entity.name.function.ice
        - match: \b
          pop: true

  keywords:
    - match: ({{keyword}})
      scope: keyword.control.ice
    - match: '\b(in|or|and|not)\b'
      scope: keyword.operator.ice
    - match: '\b(print|len|range)'
      scope: support.function.builtin.ice

  numbers:
    - match: '\b[0-9]+'
      scope: constant.numeric.ice

  strings:
    - match: ("|')
      scope: punctuation.definition.string.begin.ice
      push:
      - meta_include_prototype: false
      - meta_content_scope: string.quoted.ice
      - match: '\\.'
        scope: constant.character.escape.ice
      - match: \n
        scope: invalid.illegal.string-eol
        pop: true
      - match: \1
        scope: punctuation.definition.string.end.ice
        pop: true

  comments:
    - match: '#'
      scope: punctuation.definition.comment.ice
      push:
        - meta_scope: comment.line.hash.ice
        - match: $\n?
          pop: true
